{"version":3,"sources":["components/Header.js","components/Form.js","utilityFunctions.js","components/Results.js","config.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","defaultProps","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchInput","searchQueryOnChange","bind","assertThisInitialized","formOnSubmit","e","setState","target","value","preventDefault","submitSearchQuery","onSubmit","htmlFor","type","id","placeholder","onChange","autoFocus","disabled","Component","ALPHABET","makeId","length","arguments","undefined","Array","join","split","map","charAt","Math","floor","random","Results","_ref","searchResults","searchQuery","fetching","item","key","concat","htmlTitle","href","image","contextLink","rel","style","backgroundImage","link","title","neverSearched","googleapisConfig","cx","searchType","q","App","_this2","axios","get","params","objectSpread","then","res","data","items","console","log","catch","error","fetchData","_this$state","react","components_Header","components_Form","components_Results","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac8cf672.chunk.js","sourcesContent":["import React from 'react'\n// import PropTypes from 'prop-types'\n\nconst Header = () => {\n  return (\n    <header className='navbar navbar-dark bg-dark mb-3'>\n      <div className='container'>\n        <span className='navbar-brand'>Custom Search Demo</span>\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {}\nHeader.defaultProps = {}\n\nexport default Header\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Form extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      searchInput: ''\n    }\n\n    this.searchQueryOnChange = this.searchQueryOnChange.bind(this)\n    this.formOnSubmit = this.formOnSubmit.bind(this)\n  }\n\n  searchQueryOnChange (e) {\n    this.setState({ searchInput: e.target.value })\n  }\n\n  formOnSubmit (e) {\n    e.preventDefault()\n    if (this.state.searchInput !== '') {\n      this.props.submitSearchQuery(this.state.searchInput)\n    }\n  }\n\n  render () {\n    return (\n      <form className='mb-3' onSubmit={this.formOnSubmit}>\n        <div className='row'>\n          <div className='col-12 mb-3'>\n            <h1>Myndaleit</h1>\n          </div>\n          <div className='col-sm-9 col-lg-10 mb-3'>\n            <label htmlFor='searchQuery' className='sr-only'>Myndaleit</label>\n            <input\n              type='text'\n              className='form-control'\n              id='searchQuery'\n              placeholder=''\n              value={this.state.searchInput}\n              onChange={this.searchQueryOnChange}\n              autoFocus\n            />\n          </div>\n          <div className='col-sm-3 col-lg-2 mb-3'>\n            <button type='submit' className='btn btn-primary btn-block' disabled={this.state.searchInput === ''}>Leita</button>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\n\nForm.propTypes = {\n  submitSearchQuery: PropTypes.func.isRequired\n}\n\nForm.defaultProps = {}\n\nexport default Form\n","\nconst ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\nexport const makeId = (length = 10) => (\n  Array(length).join().split(',').map(() => (\n    ALPHABET.charAt(Math.floor(Math.random() * ALPHABET.length))\n  )).join('')\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeId } from '../utilityFunctions'\n\nconst Results = ({ searchResults, searchQuery, fetching }) => {\n  if (fetching) {\n    return (\n      <div className='text-center'>\n        <div className='spinner-border'>\n          <span className='sr-only'>Loading...</span>\n        </div>\n      </div>\n    )\n  }\n\n  if (searchResults.length === 0) {\n    if (searchQuery === '') {\n      return (\n        <div className='text-center'>\n          <span>Þú átt eftir að nota leitina...</span>\n        </div>\n      )\n    }\n\n    return (\n      <div className='text-center'>\n        <span>Engar niðurstöður fundust við leitina að: \"{searchQuery}\"</span>\n      </div>\n    )\n  }\n\n  return (\n    <div className='row'>\n      {searchResults.map(item => (\n        <div className='col-md-4' key={`${item.htmlTitle}${makeId()}`}>\n          <div className='card mb-4 shadow-lg'>\n            <a\n              href={item.image.contextLink}\n              target='_blank'\n              rel='noopener noreferrer'\n              className='bd-placeholder-img card-img'\n              style={{ backgroundImage: `url('${item.link}')` }}\n              title={item.title}\n            ><span className='sr-only'>{item.title}</span></a>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nResults.propTypes = {\n  searchResults: PropTypes.array,\n  searchQuery: PropTypes.string,\n  fetching: PropTypes.bool,\n  neverSearched: PropTypes.bool\n}\n\nResults.defaultProps = {\n  searchResults: [],\n  searchQuery: '',\n  fetching: false,\n  neverSearched: true\n}\n\nexport default Results\n","\nexport const googleapisConfig = {\n  url: 'https://content.googleapis.com/customsearch/v1',\n  params: {\n    cx: '001361074102112665899:p7mybnrloug',\n    key: 'AIzaSyAj6qgbKJfP5qpY7fXJ7JAjlLb-vdwE7fc',\n    searchType: 'image',\n    q: ''\n  }\n}\n","import React, { Component, Fragment } from 'react'\nimport axios from 'axios'\n\nimport Header from './components/Header'\nimport Form from './components/Form'\nimport Results from './components/Results'\n\nimport { googleapisConfig } from './config'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      searchQuery: '',\n      searchResults: [],\n      fetching: false\n    }\n\n    this.submitSearchQuery = this.submitSearchQuery.bind(this)\n  }\n\n  fetchData (searchQuery) {\n    this.setState({\n      fetching: true,\n      searchQuery\n    })\n\n    axios.get(googleapisConfig.url, {\n      params: { ...googleapisConfig.params, q: searchQuery }\n    }).then((res) => {\n      this.setState({ searchResults: res.data.items, fetching: false })\n      console.log(res.data)\n    }).catch((error) => {\n      this.setState({ fetching: false })\n      // TODO: handle error alert for user\n      console.log(error)\n    })\n  }\n\n  submitSearchQuery (searchQuery) {\n    if (searchQuery !== '') {\n      this.fetchData(searchQuery)\n    }\n  }\n\n  render () {\n    const { searchQuery, searchResults, fetching } = this.state\n    return (\n      <Fragment>\n        <Header />\n        <main>\n          <div className='container'>\n            <Form submitSearchQuery={this.submitSearchQuery} />\n          </div>\n          <div className='bg-light py-3'>\n            <div className='container'>\n              <Results searchQuery={searchQuery} searchResults={searchResults} fetching={fetching} />\n            </div>\n          </div>\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","/* global fetch */\n/* eslint-disable semi */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport './index.css'\nimport App from './App'\n\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}